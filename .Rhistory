##Read the data
mydata <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/diabetes.csv",sep = ",",header=FALSE)
##Enter column names
colnames(mydata) <- c("timespregnant", "twohourglucose","diastolicbp","tricepskinfold","twohourinsulin","bmi","pedigree","age","diabetestest")
#Remove na's from the data
mydata <- na.omit(mydata)
###scale the data
myscaled <-scale(mydata)
myscaled
mydata
##Read the data
mydata <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/diabetes.csv",sep = ",",header=FALSE)
##Enter column names
colnames(mydata) <- c("timespregnant", "twohourglucose","diastolicbp","tricepskinfold","twohourinsulin","bmi","pedigree","age","diabetestest")
#Remove na's from the data
mydata <- na.omit(mydata)
###scale the data
myscaled <-scale(mydata[,-9])
head(myscaled)
head[mydata]
head(mydata)
var(mydata)
class(mydata)
##Read the data
df <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/diabetes.csv",sep = ",",header=FALSE)
##Enter column names
colnames(df) <- c("timespregnant", "twohourglucose","diastolicbp","tricepskinfold","twohourinsulin","bmi","pedigree","age","diabetestest")
#Remove na's from the data
df <- na.omit(df)
##View means of speed, cycle, and wear
aggregate(. ~ diabetestest, data = df, mean)
##View sd of speed, cycle, and wear
aggregate(. ~ diabetestest, data = df, sd)
cl <- kmeans(df[-9],2)
plot(df,col=cl$cluster)
points(cl$centers, pch=19)
abline (v=0, h=0)
dfscaled <-scale(df[,-9])
View(dfscaled)
cl <- kmeans(dfscaled,2)
plot(dfscaled,col=cl$cluster)
points(cl$centers, pch=19)
abline (v=0, h=0)
###scale the data
dfscaled <-scale(df[,1:2])
cl <- kmeans(dfscaled,2)
plot(dfscaled,col=cl$cluster)
points(cl$centers, pch=19)
abline (v=0, h=0)
dfscaled
names(dfscaled)
class(dfscaled)
```{r}
##Load libraries
if (!require("cluster")){
install.packages("cluster")
}
if (!require("fpc")){
install.packages("fpc")
}
if (!require("flexclust")){
install.packages("flexclust")
}
if (!require("NbClust")){
install.packages("NbClust")
}
## remove scientific notation
options(scipen=999)
##Set seed for reproducibility
set.seed(2489)
##Clear the workspace and enivronment
rm(list=ls())
```
```{r}
##Read the data
df <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/diabetes.csv",sep = ",",header=FALSE)
##Enter column names
colnames(df) <- c("timespregnant", "twohourglucose","diastolicbp","tricepskinfold","twohourinsulin","bmi","pedigree","age","diabetestest")
#Remove na's from the data
df <- na.omit(df)
##View means of speed, cycle, and wear
aggregate(. ~ diabetestest, data = df, mean)
##View sd of speed, cycle, and wear
aggregate(. ~ diabetestest, data = df, sd)
###scale the data
dfscaled <-scale(df[,1:2])
## dividing each variable by its standard deviation:
```
```{r}
##Determine number of clusters using NbClust function
#nc <- NbClust(mydata[-9], min.nc=2, max.nc=15, method="kmeans")
#barplot(table(nc$Best.n[1,]))
```
```{r}
cl <- kmeans(df,2)
plot(df,col=cl$cluster, main "Unscaled")
points(cl$centers, pch=19)
abline (v=0, h=0)
```
```{r}
clscaled <- kmeans(dfscaled,2)
plot(dfscaled,col=clscaled$cluster)
points(clscaled$centers, pch=19)
abline (v=0, h=0)
```
```{r}
```
```{r}
```
```{r}
```
```{r}
```
cl <- kmeans(df,2)
plot(df,col=cl$cluster, main "Unscaled")
points(cl$centers, pch=19)
abline (v=0, h=0)
##Load libraries
if (!require("cluster")){
install.packages("cluster")
}
if (!require("fpc")){
install.packages("fpc")
}
if (!require("flexclust")){
install.packages("flexclust")
}
if (!require("NbClust")){
install.packages("NbClust")
}
## remove scientific notation
options(scipen=999)
##Set seed for reproducibility
set.seed(2489)
##Clear the workspace and enivronment
rm(list=ls())
##Read the data
df <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/diabetes.csv",sep = ",",header=FALSE)
##Enter column names
colnames(df) <- c("timespregnant", "twohourglucose","diastolicbp","tricepskinfold","twohourinsulin","bmi","pedigree","age","diabetestest")
#Remove na's from the data
df <- na.omit(df)
##View means of speed, cycle, and wear
aggregate(. ~ diabetestest, data = df, mean)
##View sd of speed, cycle, and wear
aggregate(. ~ diabetestest, data = df, sd)
###scale the data
dfscaled <-scale(df[,1:2])
cl <- kmeans(df,2)
plot(df,col=cl$cluster, main "Unscaled")
points(cl$centers, pch=19)
abline (v=0, h=0)
cl <- kmeans(df,2)
plot(df,col=cl$cluster, main "Unscaled")
clscaled <- kmeans(dfscaled,2)
plot(dfscaled,col=clscaled$cluster, main "Scaled")
plot(df,col=cl$cluster)
plot(df,col=cl$cluster, main="Unscaled")
cl <- kmeans(df,2)
plot(df[,1],df[,2],col=cl$cluster, main="Unscaled")
points(cl$centers, pch=19)
abline (v=0, h=0)
errortable<-table(cl$cluster,clscaled$cluster)
errortable
clscaled$cluster
cl$cluster
errortable
cl$centers
clclustered$centers
clscaled$centers
df <-df[,1:2]
cl <- kmeans(df,2)
plot(df[,1],df[,2],col=cl$cluster, main="Unscaled")
points(cl$centers, pch=19)
abline (v=0, h=0)
errortable<-table(cl$cluster,clscaled$cluster)
errortable
cl$cluster
clscaled$cluster
table(cl$cluster)
table(clscaled$cluster)
?table
errortable<-margin.table(cl$cluster,clscaled$cluster)
table(cl$cluster,clscaled$cluster)
errortable<-table(cl$cluster,clscaled$cluster,useNA = "always")
errortable
?xtable
require("xtable")
errortable<-xtable(cl$cluster,clscaled$cluster,useNA = "always")
table(cl$cluster)
table(clscaled$cluster)
table(table(clscaled$cluster),table(cl$cluster)
table(table(clscaled$cluster),table(cl$cluster))
errortable<-table(cl$cluster,clscaled$cluster)
freqtable(errortable)
ftable(errortable)
clscaled$cluster - cl$cluster
table(clscaled$cluster - cl$cluster)
errortable<-table(cl$cluster,clscaled$cluster)
errortable
errortable<-table(cl$cluster,clscaled$cluster,useNA = "always")
errortable
table(clscaled$cluster - cl$cluster)
randIndex(errortable)
errortable<-table(cl$cluster,clscaled$cluster)
errortable
table(clscaled$cluster - cl$cluster)
randIndex(errortable)
```
errortable<-table(cl$cluster,clscaled$cluster)
errortable
table(clscaled$cluster - cl$cluster)
randIndex(errortable)
errortable<-table(cl$cluster,clscaled$cluster) ##CL in row CLSCALED in Column
errortable
table(cl$cluster - clscaled$cluster)
randIndex(errortable)
xtabs(cl$cluster,clscaled$cluster)
library(gmodels)
CrossTable(mydata$myrowvar, mydata$mycolvar)
install.packages("gmodels")
library(gmodels)
CrossTable(mydata$myrowvar, mydata$mycolvar)
library(gmodels)
CrossTable(cl$cluster, clscaled$cluster)
margin.table(mytable, 1)
margin.table(cl$cluster, 1)
table(cl$cluster)
margin.table(table(cl$cluster)), 1)
margin.table(table(cl$cluster), 1)
table(table(cl$cluster),table(clscaled$cluster))
margin.table(table(table(cl$cluster),table(clscaled$cluster)))
##Clear the workspace and enivronment
?randIndex
if (!require("cluster")){
install.packages("cluster")
}
if (!require("fpc")){
install.packages("fpc")
}
if (!require("flexclust")){
install.packages("flexclust")
}
if (!require("NbClust")){
install.packages("NbClust")
}
if (!require("gmodels")){
install.packages("gmodels")
}
?randIndex
table(df[,9],cl$cluster)
df <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/diabetes.csv",sep = ",",header=FALSE)
##Enter column names
colnames(df) <- c("timespregnant", "twohourglucose","diastolicbp","tricepskinfold","twohourinsulin","bmi","pedigree","age","diabetestest")
#Remove na's from the data
df <- na.omit(df)
dftemp <-df
###scale the data
dfscaled <-scale(df[,1:2])
nc <-2
df <-df[,1:2]
cl <- kmeans(df,nc)
plot(df[,1],df[,2],col=cl$cluster, main="Unscaled")
points(cl$centers, pch=19)
abline (v=0, h=0)
clscaled <- kmeans(dfscaled,nc)
plot(dfscaled[,1],dfscaled[,2],col=clscaled$cluster, main="Scaled")
points(clscaled$centers, pch=19)
abline (v=0, h=0)
rrortable<-table(cl$cluster,clscaled$cluster) ##CL in row CLSCALED in Column
errortable
table(cl$cluster - clscaled$cluster)
randIndex(errortable)
CrossTable(cl$cluster, clscaled$cluster)
errortable<-table(cl$cluster,clscaled$cluster) ##CL in row CLSCALED in Column
errortable
table(cl$cluster - clscaled$cluster)
randIndex(errortable)
CrossTable(cl$cluster, clscaled$cluster)
if (!require("cluster")){
install.packages("cluster")
}
if (!require("fpc")){
install.packages("fpc")
}
if (!require("flexclust")){
install.packages("flexclust")
}
if (!require("NbClust")){
install.packages("NbClust")
}
if (!require("gmodels")){
install.packages("gmodels")
}
## remove scientific notation
options(scipen=999)
##Set seed for reproducibility
set.seed(2489)
errortable<-table(cl$cluster,clscaled$cluster) ##CL in row CLSCALED in Column
errortable
table(cl$cluster - clscaled$cluster)
randIndex(errortable)
CrossTable(cl$cluster, clscaled$cluster)
table(df[,9],cl$cluster)
table(dftemp[,9],cl$cluster)
dftemp[,9] <- gsub("1","2",dftemp[,9])
table(dftemp[,9],cl$cluster)
dftemp[,9] <- gsub("0","1",dftemp[,9])
table(dftemp[,9],cl$cluster)
rossTable(dftemp[,9], clscaled$cluster)
CrossTable(dftemp[,9], clscaled$cluster)
plotcluster(df, cl$cluster)
clusplot(df, cl$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
with(df, pairs(df, col=c(1:3)[cl$cluster]))
randIndex(table(dftemp[,9],cl$cluster))
#CrossTable(dftemp[,9], clscaled$cluster)
plot(dftemp[,9],col=cl$cluster)
plot(dftemp[,9],cl$cluster)
plotcluster(dftemp[,9], cl$cluster)
plotcluster(dftemp, cl$cluster)
plotcluster(df, cl$cluster)
attach(iris)
plot(length,width)
str(iris)
plot(Sepal.Length,Sepal.Width)
cor(Sepal.Length,Sepal.Width)
cor(iris)
cor.test(Sepal.Length,Sepal.Width)
cov(Sepal.Length,Sepal.Width)
cor(iris[,-5])
attach(cars)
plot(speed,distance)
str(cars)
plot(speed,dist)
abline(lm(speed~dist))
abline(lm(dist~speed))
fit<-lm(dist~speed)
summary(fit)
abline(mean(speed),mean(dist))
abline(v=mean(speed),h=mean(dist))
plot(speed,distance)
plot(speed,dist)
abline(v=mean(speed),h=mean(dist))
abline(lm(dist~speed))
cor.test(cars)
cor.test(dist,speed)
anova(fit)
options(scipen=999)
anova(fit)
plot(fit)
attach(mtcars)
fit <- lm(mpg~wt+drat)
fit
summary(fit)
fitbest <- lm(mpg~wt)
summary(fitbest)
cor(drat,wt)
confint(fit)
anova(fit)
fit <- lm(mpg~wt+drat+I(wt^2))
summary(fit)
anova(fit)
summary(fit)
fit <- lm(mpg~wt+I(wt^2))
summary(fit)
summary(bestfit)
summary(fitbest)
cor.test(mpg,wt)
cor.test(mpg,I(wt^2)
cor.test(mpg,I(wt^2))
cor.test(mpg,wt)
plot(fit)
attach(diamonds)
library(ggplot2)
attach(diamonds)
ls
str(diamonds)
fit<-lm(price~.)
fit<-lm(price~., data=diamonds)
summary(fit)
fit2<-lm(price~depth+x+y+z, data=diamonds)
summary(fit2)
confint(fit)
confint(fit2)
cor(diamonds)
anova(fit)
anova(fit2)
plot(fit)
plot(fit2)
.93/1-.88
.05*.05
.0025*100
.93/(1-.88)
7.75*.05
((.93/(1-.88))*.05) *100
(((1-.93)/(88))*.05) *100
ppois(10, lambda = 5 * 3).
ppois(10, lambda = 5 * 3)
zip.file <- 'C:/Users/bryan_000/Documents/GitHub/Data/activity.zip'
unzip(zip.file, overwrite=TRUE)
activity <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/activity.csv", header = TRUE, sep =",")
head(activity)
hist(activity)
hist(activity$interval)
hist(activity$date)
hist(activity$steps)
if (!require("ggplots2")){
install.packages("ggplots2")
}
```
mydata <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/activity.csv", header = TRUE, sep =",")
mydata$month <- as.numeric(format(data$date, "%m"))
mydatanona <- na.omit(mydata)
rownames(mydatanona) <- 1:nrow(mydatanona)
head(mydatanona)
dim(mydatanona)
str(mydata)
mydata$month <- as.numeric(format(mydata$date, "%m"))
mydata$month <- as.numeric(format(mydata$date, "%m"))
mydata <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/activity.csv", header = TRUE, sep =",")
##
mydata$month <- as.numeric(format(mydata$date, "%m"))
if (!file.exists("C:/Users/bryan_000/Documents/GitHub/Data/activity.csv")) {
zip.file <- 'C:/Users/bryan_000/Documents/GitHub/Data/activity.zip'
unzip(zip.file)
}
mydata <- read.table("C:/Users/bryan_000/Documents/GitHub/Data/activity.csv", header = TRUE, sep =",")
##
mydata$month <- as.numeric(format(mydata$date, "%m"))
opts_chunk$get()
library(knitr)
opts_chunk$get()
opts_chunk$set(fig.width=4, fig.height=4, warning=FALSE)
opts_chunk$get()
?hist
hist(mydata$steps$ydata$date, main="Histogram of Total Number of Steps Taken Each Day")
total.steps <- tapply(mydata$steps, mydata$date, FUN=sum, na.rm=TRUE)
#qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
total.steps
hist(total.steps)
library(Hmisc)
DF <- data.frame(age = c(10, 20, NA, 40), sex = c('male','female'))
DF
DF$imputed_age <- with(DF, impute(age, mean))
DF
?impute
setwd('C:/Users/bryan_000/Documents/GitHub/Data/')
data <- read.table("activity.csv", header = TRUE, sep =",")
impdata <- data
stepsperint<- aggregate(data$steps,by = list(interval = data$interval), FUN=mean, na.rm="TRUE")
impdata$imputed_inv<-with(impdata, impute(steps,mean))
impdata
stepsperint$interval
View(stepsperint)
mean(stepsperiny)
mean(stepsperint)
mean(stepsperint4x)
mean(stepsperint$x)
View(DF)
impdata$imputed_inv<-with(impdata, impute(steps,mean))
imptotalsteps <- with(impdata, rowsum(imputed_inv, date))
hist(imptotalsteps, breaks=8, col="blue", main="Total Steps Histogram After NA Imputed", xlab="Steps")
if (!require("knitr"))
{
install.packages("knitr")
}
if (!require("ggplot2"))
{
install.packages("ggplot2")
}
# Turn off scientific notations for numbers
options(scipen = 999)
#Set figure width and height and warning off
opts_chunk$set(fig.width=7, fig.height=7, warnings=FALSE)
#Set working directory to data directory
setwd('C:/Users/bryan_000/Documents/GitHub/Data/')
data <- read.table("activity.csv", header = TRUE, sep =",")
totalsteps <- with(data, rowsum(steps, date))
#plot the histogram
hist(totalsteps, breaks=8, col="blue", main="Total Steps Histogram", xlab="Steps")
## Calcutae mean steps per Interval for plotting
stepsperint<- aggregate(data$steps,by = list(interval = data$interval), FUN=mean, na.rm="TRUE")
##Plot
with(stepsperint, plot(interval, x, type="l", col="red"))
maxnumsteps <-stepsperint[which.max(stepsperint[,2]),]
impdata$imputed_steps<-with(impdata, impute(steps,mean))
imptotalsteps <- with(impdata, rowsum(imputed_steps, date))
hist(imptotalsteps, breaks=8, col="blue", main="Total Steps Histogram After NA Imputed", xlab="Steps")
round(median(imptotalsteps),2)
round(mean(imptotalsteps)
round(mean(imptotalsteps),2)
round(mean(imptotalsteps),2)
impdata$imputed_inv<-with(impdata, impute(steps,mean))
rm(list=ls())
Sys.getlocale()
Sys.setlocale("LC_ALL", "English")
Sys.setlocale("LC_ALL", "German")
Sys.setlocale("LC_ALL", "English")
knit2html()
?knit2html
getwd
getwd()
setwd("~/GitHub/RepData_PeerAssessment1")
knit2html(PA1_template.RMD)
knit2html(PA1_template.RMD,PA1_template.RMD)
getwd()
knit2html(C:/Users/bryan_000/Documents/GitHub/RepData_PeerAssessment1/PA1_template.Rmd)
knit2html("C:/Users/bryan_000/Documents/GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("C:/Users/bryan_000/Documents/GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("C:/Users/bryan_000/Documents/GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
